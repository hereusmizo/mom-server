{"version":3,"sources":["pages/cms/Notice.js"],"names":["connect","logout","withRouter","props","history","useState","id","caption","description","created","formvalues","setformvalues","wait","setwait","createdialog","setcreatedialog","editdialog","seteditdialog","toast","settoast","message","setmessage","status","setstatus","notice","setNotice","useEffect","document","title","fetchNotice","a","api","get","response","data","submit","e","preventDefault","localStorage","getItem","post","headers","Authorization","Date","green","red","submitEdit","patch","map","deletesubmit","delete","filter","variant","edge","onClick","goBack","style","display","marginTop","color","startIcon","length","size","index","hover","key","cursor","moment","format","align","fullWidth","maxWidth","open","onClose","dividers","onSubmit","required","margin","label","value","onChange","target","multiline","rows","justifyContent","disabled","type","marginRight","window","confirm","anchorOrigin","vertical","horizontal","autoHideDuration","backgroundColor","action"],"mappings":"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","file":"static/js/38.103c4e82.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  IconButton,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  Snackbar,\r\n  SnackbarContent,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ArrowBack, Close, Add } from \"@material-ui/icons\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\nimport api from \"../../api/api\";\r\nimport { logout } from \"../../actions\";\r\n\r\nconst Notice = (props) => {\r\n  const { logout, history } = props;\r\n  const [formvalues, setformvalues] = useState({\r\n    id: \"\",\r\n    caption: \"\",\r\n    description: \"\",\r\n    created: \"\",\r\n  });\r\n\r\n  const [wait, setwait] = useState(false);\r\n  const [createdialog, setcreatedialog] = useState(false);\r\n  const [editdialog, seteditdialog] = useState(false);\r\n  const [toast, settoast] = useState(false);\r\n  const [message, setmessage] = useState(null);\r\n  const [status, setstatus] = useState(null);\r\n  const [notice, setNotice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Notice\";\r\n    fetchNotice();\r\n  }, []);\r\n\r\n  const fetchNotice = async () => {\r\n    try {\r\n      const response = await api.get(`/api/notice`);\r\n      return setNotice(response.data.data);\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setwait(true);\r\n\r\n        const response = await api.post(`/api/notice`, formvalues, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n\r\n        setNotice([\r\n          ...notice,\r\n          {\r\n            ...formvalues,\r\n            id: response.data.id,\r\n            created: new Date()\r\n          },\r\n        ]);\r\n        setformvalues({\r\n          id: \"\",\r\n          caption: \"\",\r\n          description: \"\",\r\n          created: \"\",\r\n        });\r\n        setstatus(green[700]);\r\n        setmessage(\"Notice Published Successfully\");\r\n        setwait(false);\r\n        setcreatedialog(false);\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setwait(false);\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const submitEdit = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setwait(true);\r\n        await api.patch(`/api/notice/${formvalues.id}`, formvalues, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n        setNotice(notice.map((a) => (a.id === formvalues.id ? formvalues : a)));\r\n        setformvalues({\r\n          id: \"\",\r\n          caption: \"\",\r\n          description: \"\",\r\n          created: \"\",\r\n        });\r\n        seteditdialog(false);\r\n        setstatus(green[700]);\r\n        setmessage(\"Notice Updated Successfully\");\r\n        setwait(false);\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setwait(false);\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const deletesubmit = async () => {\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setwait(true);\r\n        await api.delete(\r\n          `/api/notice/${formvalues.id}`,\r\n\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n            },\r\n          }\r\n        );\r\n        setNotice(notice.filter((a) => a.id !== formvalues.id));\r\n        setformvalues({\r\n          id: \"\",\r\n          caption: \"\",\r\n          description: \"\",\r\n          created: \"\",\r\n        });\r\n        seteditdialog(false);\r\n        setstatus(green[700]);\r\n        setmessage(\"Notice Deleted Successfully\");\r\n        setwait(false);\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setwait(false);\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const renderlist = () => {\r\n    if (notice.length) {\r\n      return (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Caption</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {notice.map((a, index) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={index}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    setformvalues({ ...a });\r\n                    seteditdialog(true);\r\n                  }}\r\n                >\r\n                  <TableCell>\r\n                    <Typography>\r\n                      {moment(a.created).format(\"DD-MM-YYYY\")}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>{a.caption}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography align=\"center\" variant=\"h6\" style={{ marginTop: 300 }}>\r\n          NO DATA TO DISPLAY!\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderdialog = () => (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={createdialog}\r\n      onClose={() => {\r\n        setformvalues({\r\n          id: \"\",\r\n          caption: \"\",\r\n          description: \"\",\r\n          created: \"\",\r\n        });\r\n        setcreatedialog(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Publish Notice</DialogTitle>\r\n      <DialogContent dividers>\r\n        <form onSubmit={submit}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Notice Caption\"\r\n            value={formvalues.caption}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, caption: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Description\"\r\n            multiline\r\n            rows={5}\r\n            value={formvalues.description}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, description: e.target.value })\r\n            }\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={wait}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setformvalues({\r\n                  id: \"\",\r\n                  caption: \"\",\r\n                  description: \"\",\r\n                  created: \"\",\r\n                });\r\n                setcreatedialog(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n\r\n  const rendereditdialog = () => (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={editdialog}\r\n      onClose={() => {\r\n        setformvalues({\r\n          id: \"\",\r\n          caption: \"\",\r\n          description: \"\",\r\n          created: \"\",\r\n        });\r\n        seteditdialog(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Edit Notice</DialogTitle>\r\n      <DialogContent dividers>\r\n        <form onSubmit={submitEdit}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Notice Caption\"\r\n            value={formvalues.caption}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, caption: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Description\"\r\n            multiline\r\n            rows={5}\r\n            value={formvalues.description}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, description: e.target.value })\r\n            }\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={wait}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              disabled={wait}\r\n              style={{ marginRight: 10 }}\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete notice? You cannot recover once deleted!`\r\n                  )\r\n                ) {\r\n                  return deletesubmit();\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setformvalues({\r\n                  id: \"\",\r\n                  caption: \"\",\r\n                  description: \"\",\r\n                  created: \"\",\r\n                });\r\n                seteditdialog(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h6\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          onClick={() => {\r\n            history.goBack();\r\n          }}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n        MOM Notice Management\r\n      </Typography>\r\n      <div style={{ display: \"block\", marginTop: 8 }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<Add />}\r\n          onClick={() => setcreatedialog(true)}\r\n        >\r\n          Post new notice\r\n        </Button>\r\n      </div>\r\n      <Divider style={{ marginTop: 20 }} />\r\n      {renderlist()}\r\n      {renderdialog()}\r\n      {rendereditdialog()}\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={toast}\r\n        autoHideDuration={3000}\r\n        onClose={() => {\r\n          settoast(false);\r\n        }}\r\n      >\r\n        <SnackbarContent\r\n          style={{ backgroundColor: status }}\r\n          message={message}\r\n          onClose={() => {\r\n            settoast(false);\r\n          }}\r\n          action={\r\n            <IconButton\r\n              key=\"close\"\r\n              color=\"inherit\"\r\n              onClick={() => settoast(false)}\r\n            >\r\n              <Close />\r\n            </IconButton>\r\n          }\r\n        ></SnackbarContent>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(null, { logout })(withRouter(Notice));\r\n"],"sourceRoot":""}