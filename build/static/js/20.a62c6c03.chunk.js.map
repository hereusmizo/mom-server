{"version":3,"sources":["api/baseurl.js","../node_modules/@material-ui/icons/esm/AddAPhoto.js","pages/cms/Bulk.js"],"names":["createSvgIcon","React","createElement","d","connect","logout","withRouter","props","history","useState","id","name","description","image","formvalues","setformvalues","wait","setwait","createdialog","setcreatedialog","imageDialog","setImageDialog","editdialog","seteditdialog","toast","settoast","message","setmessage","status","setstatus","bulk","setBulk","useEffect","document","title","fetchBulks","a","api","get","response","data","submit","e","preventDefault","localStorage","getItem","formData","FormData","append","post","headers","Authorization","green","red","submitEdit","patch","map","deletesubmit","delete","filter","variant","edge","onClick","goBack","style","display","marginTop","color","startIcon","length","size","align","padding","index","hover","key","cursor","fullWidth","maxWidth","open","onClose","dividers","onSubmit","required","margin","label","value","onChange","target","multiline","rows","accept","multiple","type","files","htmlFor","component","flexDirection","alignItems","alt","src","URL","createObjectURL","width","justifyContent","disabled","marginRight","window","confirm","scroll","borderRadius","border","baseurl","opacity","hidden","position","top","left","transform","anchorOrigin","vertical","horizontal","autoHideDuration","backgroundColor","action"],"mappings":"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","file":"static/js/20.a62c6c03.chunk.js","sourcesContent":["// export default \"http://localhost:5000/\";\r\nexport default \"https://missionorganicmizoram.com/\";\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 4V1h2v3h3v2H5v3H3V6H0V4h3zm3 6V7h3V4h7l1.83 2H21c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V10h3zm7 9c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-3.2-5c0 1.77 1.43 3.2 3.2 3.2s3.2-1.43 3.2-3.2-1.43-3.2-3.2-3.2-3.2 1.43-3.2 3.2z\"\n}), 'AddAPhoto');","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  IconButton,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  Snackbar,\r\n  SnackbarContent,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ArrowBack, Close, Add, AddAPhoto } from \"@material-ui/icons\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\nimport api from \"../../api/api\";\r\nimport baseurl from \"../../api/baseurl\";\r\nimport { logout } from \"../../actions\";\r\n\r\nconst Bulk = (props) => {\r\n  const { logout, history } = props;\r\n  const [formvalues, setformvalues] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const [wait, setwait] = useState(false);\r\n  const [createdialog, setcreatedialog] = useState(false);\r\n  const [imageDialog, setImageDialog] = useState(false);\r\n  const [editdialog, seteditdialog] = useState(false);\r\n  const [toast, settoast] = useState(false);\r\n  const [message, setmessage] = useState(null);\r\n  const [status, setstatus] = useState(null);\r\n  const [bulk, setBulk] = useState([]);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Bulk Product\";\r\n    fetchBulks();\r\n  }, []);\r\n\r\n  const fetchBulks = async () => {\r\n    try {\r\n      const response = await api.get(`/api/bulk`);\r\n      return setBulk(response.data.data);\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setwait(true);\r\n        const formData = new FormData();\r\n        formData.append(\"name\", formvalues.name);\r\n        formData.append(\"description\", formvalues.description);\r\n\r\n        if (formvalues.image) {\r\n          formData.append(\"image\", formvalues.image, formvalues.image.name);\r\n        } else {\r\n          formData.append(\"image\", null);\r\n        }\r\n\r\n        const response = await api.post(`/api/bulk`, formData, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n\r\n        setBulk([\r\n          ...bulk,\r\n          {\r\n            ...formvalues,\r\n            id: response.data.id,\r\n            image: response.data.image,\r\n          },\r\n        ]);\r\n        setformvalues({\r\n          id: \"\",\r\n          name: \"\",\r\n          description: \"\",\r\n          image: \"\",\r\n        });\r\n        setstatus(green[700]);\r\n        setmessage(\"Bulk Product Added Successfully\");\r\n        setwait(false);\r\n        setcreatedialog(false);\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setwait(false);\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const submitEdit = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setwait(true);\r\n        await api.patch(`/api/bulk/${formvalues.id}`, formvalues, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n        setBulk(bulk.map((a) => (a.id === formvalues.id ? formvalues : a)));\r\n        setformvalues({\r\n          id: \"\",\r\n          name: \"\",\r\n          description: \"\",\r\n          image: \"\",\r\n        });\r\n        seteditdialog(false);\r\n        setstatus(green[700]);\r\n        setmessage(\"Bulk Product Updated Successfully\");\r\n        setwait(false);\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setwait(false);\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const deletesubmit = async () => {\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setwait(true);\r\n        await api.delete(\r\n          `/api/bulk/${formvalues.id}`,\r\n\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n            },\r\n          }\r\n        );\r\n        setBulk(bulk.filter((a) => a.id !== formvalues.id));\r\n        setformvalues({\r\n          id: \"\",\r\n          name: \"\",\r\n          description: \"\",\r\n          image: \"\",\r\n        });\r\n        seteditdialog(false);\r\n        setstatus(green[700]);\r\n        setmessage(\"Bulk Product Deleted Successfully\");\r\n        setwait(false);\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setwait(false);\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const renderlist = () => {\r\n    if (bulk.length) {\r\n      return (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\" padding=\"checkbox\">\r\n                #\r\n              </TableCell>\r\n              <TableCell>Name</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {bulk.map((a, index) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={index}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    setformvalues({ ...a });\r\n                    seteditdialog(true);\r\n                  }}\r\n                >\r\n                  <TableCell>\r\n                    <Typography align=\"center\">{index + 1}</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>{a.name}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography align=\"center\" variant=\"h6\" style={{ marginTop: 300 }}>\r\n          NO DATA TO DISPLAY!\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderdialog = () => (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={createdialog}\r\n      onClose={() => {\r\n        setformvalues({\r\n          id: \"\",\r\n          name: \"\",\r\n          description: \"\",\r\n          image: \"\",\r\n        });\r\n        setcreatedialog(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Create New Bulk Product</DialogTitle>\r\n      <DialogContent dividers>\r\n        <form onSubmit={submit}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Name of Product\"\r\n            value={formvalues.name}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, name: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Description\"\r\n            multiline\r\n            rows={5}\r\n            value={formvalues.description}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, description: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            accept=\"image/*\"\r\n            style={{ display: \"none\" }}\r\n            id=\"contained-button-file\"\r\n            multiple={false}\r\n            type=\"file\"\r\n            onChange={(e) => {\r\n              setformvalues({ ...formvalues, image: e.target.files[0] });\r\n            }}\r\n          />\r\n          <label htmlFor=\"contained-button-file\">\r\n            <Button\r\n              color=\"secondary\"\r\n              component=\"span\"\r\n              style={{ marginTop: 10 }}\r\n              startIcon={<AddAPhoto />}\r\n            >\r\n              Choose Image\r\n            </Button>\r\n            <i>(512px X 512px recommended)</i>\r\n          </label>\r\n          {formvalues.image && createdialog && (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <img\r\n                alt=\"Activity\"\r\n                src={URL.createObjectURL(formvalues.image)}\r\n                style={{\r\n                  width: 300,\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={wait}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setformvalues({\r\n                  id: \"\",\r\n                  name: \"\",\r\n                  description: \"\",\r\n                  image: \"\",\r\n                });\r\n                setcreatedialog(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n\r\n  const rendereditdialog = () => (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={editdialog}\r\n      onClose={() => {\r\n        setformvalues({\r\n          id: \"\",\r\n          name: \"\",\r\n          description: \"\",\r\n          image: \"\",\r\n        });\r\n        seteditdialog(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Edit Crop</DialogTitle>\r\n      <DialogContent dividers>\r\n        <form onSubmit={submitEdit}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Name of Product\"\r\n            value={formvalues.name}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, name: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Description\"\r\n            multiline\r\n            rows={5}\r\n            value={formvalues.description}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, description: e.target.value })\r\n            }\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={wait}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              disabled={wait}\r\n              style={{ marginRight: 10 }}\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete ${formvalues.name}? You cannot recover once deleted!`\r\n                  )\r\n                ) {\r\n                  return deletesubmit();\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              style={{ marginRight: 10 }}\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => setImageDialog(true)}\r\n            >\r\n              Image\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setformvalues({\r\n                  id: \"\",\r\n                  name: \"\",\r\n                  description: \"\",\r\n                  image: \"\",\r\n                });\r\n                seteditdialog(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n\r\n  const renderImageDialog = () => (\r\n    <Dialog\r\n      scroll=\"body\"\r\n      open={imageDialog}\r\n      onClose={() => {\r\n        setImageDialog(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Change Image</DialogTitle>\r\n      <DialogContent dividers>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            // flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              borderRadius: 8,\r\n              border: \"1px solid #ddd\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              padding: 10,\r\n            }}\r\n          >\r\n            <input\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              id=\"contained-button-file1\"\r\n              multiple={false}\r\n              type=\"file\"\r\n              onChange={async (e) => {\r\n                try {\r\n                  setwait(true);\r\n                  const formData = new FormData();\r\n                  formData.append(\r\n                    \"image\",\r\n                    e.target.files[0],\r\n                    e.target.files[0].name\r\n                  );\r\n                  const response = await api.patch(\r\n                    `/api/bulk/image/${formvalues.id}`,\r\n                    formData,\r\n                    {\r\n                      headers: {\r\n                        Authorization:\r\n                          \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n                      },\r\n                    }\r\n                  );\r\n\r\n                  setformvalues({\r\n                    ...formvalues,\r\n                    image: response.data.image,\r\n                  });\r\n                  setBulk(\r\n                    bulk.map((a) =>\r\n                      a.id === formvalues.id\r\n                        ? {\r\n                          ...formvalues,\r\n                          image: response.data.image,\r\n                        }\r\n                        : a\r\n                    )\r\n                  );\r\n                  return setwait(false);\r\n                } catch {\r\n                  return setwait(false);\r\n                }\r\n              }}\r\n            />\r\n            <label htmlFor=\"contained-button-file1\">\r\n              <Button\r\n                color=\"secondary\"\r\n                component=\"span\"\r\n                startIcon={<AddAPhoto />}\r\n              >\r\n                Choose Image\r\n              </Button>\r\n              <i>(512px X 512px recommended)</i>\r\n            </label>\r\n            {formvalues.image && imageDialog && (\r\n              <>\r\n                <img\r\n                  alt=\"Front\"\r\n                  src={`${baseurl}${formvalues.image}`}\r\n                  style={{\r\n                    width: 400,\r\n                    opacity: wait ? 0.2 : 1,\r\n                  }}\r\n                />\r\n                <div\r\n                  hidden={!wait}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                  }}\r\n                >\r\n                  Uploading...\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            marginTop: 10,\r\n          }}\r\n        >\r\n          <Button\r\n            disabled={wait}\r\n            onClick={() => setImageDialog(false)}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h6\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          onClick={() => {\r\n            history.goBack();\r\n          }}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n        Bulk Product Management\r\n      </Typography>\r\n      <div style={{ display: \"block\", marginTop: 8 }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<Add />}\r\n          onClick={() => setcreatedialog(true)}\r\n        >\r\n          Add Product\r\n        </Button>\r\n      </div>\r\n      <Divider style={{ marginTop: 20 }} />\r\n      {renderlist()}\r\n      {renderdialog()}\r\n      {rendereditdialog()}\r\n      {renderImageDialog()}\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={toast}\r\n        autoHideDuration={3000}\r\n        onClose={() => {\r\n          settoast(false);\r\n        }}\r\n      >\r\n        <SnackbarContent\r\n          style={{ backgroundColor: status }}\r\n          message={message}\r\n          onClose={() => {\r\n            settoast(false);\r\n          }}\r\n          action={\r\n            <IconButton\r\n              key=\"close\"\r\n              color=\"inherit\"\r\n              onClick={() => settoast(false)}\r\n            >\r\n              <Close />\r\n            </IconButton>\r\n          }\r\n        ></SnackbarContent>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(null, { logout })(withRouter(Bulk));\r\n"],"sourceRoot":""}