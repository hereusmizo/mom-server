{"version":3,"sources":["../node_modules/@material-ui/icons/esm/ArrowBack.js","../node_modules/@material-ui/icons/esm/Delete.js","pages/cms/BulkOrder.js"],"names":["createSvgIcon","React","createElement","d","connect","logout","withRouter","props","history","useState","bulkOrder","setBulkProduct","useEffect","document","title","fetchProductOrders","a","localStorage","getItem","api","get","headers","Authorization","response","data","deleteOrder","id","delete","filter","alert","Container","style","marginBottom","Typography","variant","IconButton","edge","onClick","goBack","ArrowBack","Divider","marginTop","length","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","index","key","name","cname","phone","type","quantity","moment","created","format","Tooltip","window","confirm","Delete","color"],"mappings":"+GAAA,4BAEeA,gBAAcC,IAAMC,cAAc,OAAQ,CACvDC,EAAG,iEACD,c,8LCFWH,cAAcC,IAAMC,cAAc,OAAQ,CACvDC,EAAG,kFACD,U,2DCsJWC,sBAAQ,KAAM,CAAEC,YAAhBD,CAA0BE,aAtIvB,SAACC,GAAW,IAClBF,EAAoBE,EAApBF,OAAQG,EAAYD,EAAZC,QADS,EAEWC,mBAAS,IAFpB,mBAElBC,EAFkB,KAEPC,EAFO,KAIzBC,qBAAU,WACNC,SAASC,MAAQ,aACjBC,MACD,IAEH,IAAMA,EAAkB,uCAAG,4BAAAC,EAAA,0DACnBC,aAAaC,QAAQ,aADF,0CAGQC,IAAIC,IAAJ,kBAA2B,CAC9CC,QAAS,CACLC,cAAe,UAAYL,aAAaC,QAAQ,gBALzC,cAGTK,EAHS,yBAQRZ,EAAeY,EAASC,KAAKA,OARrB,mHAaZnB,KAbY,yDAAH,qDAiBlBoB,EAAW,uCAAG,WAAOC,GAAP,SAAAV,EAAA,0DACZC,aAAaC,QAAQ,aADT,0CAGFC,IAAIQ,OAAJ,0BAA8BD,GAAM,CACtCL,QAAS,CACLC,cAAe,UAAYL,aAAaC,QAAQ,gBALhD,OAQRP,EAAeD,EAAUkB,QAAO,SAACZ,GAAD,OAAOA,EAAEU,KAAOA,MARxC,yEAUDG,MAAM,oCAVL,yDAaLxB,KAbK,yDAAH,sDAwFjB,OACI,kBAACyB,EAAA,EAAD,CAAWC,MAAO,CAAEC,aAAc,MAC9B,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAChB,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLC,QAAS,WACL7B,EAAQ8B,WAGZ,kBAACC,EAAA,EAAD,OAPR,eAWA,kBAACC,EAAA,EAAD,CAAST,MAAO,CAAEU,UAAW,MAnF7B/B,EAAUgC,OAEN,kBAACC,EAAA,EAAD,CAAOC,KAAK,SACR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,YAGR,kBAACC,EAAA,EAAD,KACKvC,EAAUwC,KAAI,SAAClC,EAAGmC,GACf,OACI,kBAACL,EAAA,EAAD,CAAUM,IAAKD,GACX,kBAACJ,EAAA,EAAD,KACI,kBAACd,EAAA,EAAD,KAAakB,EAAQ,IAEzB,kBAACJ,EAAA,EAAD,KACI,kBAACd,EAAA,EAAD,KAAajB,EAAEqC,OAEnB,kBAACN,EAAA,EAAD,KACI,kBAACd,EAAA,EAAD,KAAajB,EAAEsC,QAEnB,kBAACP,EAAA,EAAD,KACI,kBAACd,EAAA,EAAD,KAAajB,EAAEuC,QAEnB,kBAACR,EAAA,EAAD,CAAWC,MAAM,UACb,kBAACf,EAAA,EAAD,KAAwB,IAAXjB,EAAEwC,KAAa,IAAMxC,EAAEyC,WAExC,kBAACV,EAAA,EAAD,KACI,kBAACd,EAAA,EAAD,KACKyB,IAAO1C,EAAE2C,SAASC,OAAO,gBAIlC,kBAACb,EAAA,EAAD,CAAWC,MAAM,UAAS,kBAACa,EAAA,EAAD,CAAS/C,MAAM,UACrC,kBAACqB,EAAA,EAAD,CACIS,KAAK,QACLP,QAAS,WACL,GACIyB,OAAOC,QAAP,gFAIA,OAAOtC,EAAYT,EAAEU,MAI7B,kBAACsC,EAAD,CAAQC,MAAM,mBAW1C,kBAAChC,EAAA,EAAD,CAAYe,MAAM,SAASd,QAAQ,KAAKH,MAAO,CAAEU,UAAW,MAA5D","file":"static/js/26.64b1cd22.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Container,\r\n    Typography,\r\n    Divider,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    IconButton,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { ArrowBack, Delete } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport api from \"../../api/api\";\r\nimport { logout } from \"../../actions\";\r\n\r\nconst BulkOrder = (props) => {\r\n    const { logout, history } = props;\r\n    const [bulkOrder, setBulkProduct] = useState([]);\r\n\r\n    useEffect(() => {\r\n        document.title = \"Bulk Order\";\r\n        fetchProductOrders();\r\n    }, []);\r\n\r\n    const fetchProductOrders = async () => {\r\n        if (localStorage.getItem(\"mom-admin\")) {\r\n            try {\r\n                const response = await api.get(`/api/bulk-order`, {\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n                    },\r\n                });\r\n                return setBulkProduct(response.data.data);\r\n            } catch (err) {\r\n                return;\r\n            }\r\n        } else {\r\n            return logout();\r\n        }\r\n    };\r\n\r\n    const deleteOrder = async (id) => {\r\n        if (localStorage.getItem(\"mom-admin\")) {\r\n            try {\r\n                await api.delete(`/api/bulk-order/${id}`, {\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n                    },\r\n                });\r\n                setBulkProduct(bulkOrder.filter((a) => a.id !== id));\r\n            } catch (err) {\r\n                return alert(\"Something went wrong. Try again\");\r\n            }\r\n        } else {\r\n            return logout();\r\n        }\r\n    };\r\n\r\n    const renderList = () => {\r\n        if (bulkOrder.length) {\r\n            return (\r\n                <Table size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>#</TableCell>\r\n                            <TableCell>Product</TableCell>\r\n                            <TableCell>Customer</TableCell>\r\n                            <TableCell>Contact</TableCell>\r\n                            <TableCell align=\"center\">QTY (MT)</TableCell>\r\n                            <TableCell>Order Date</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {bulkOrder.map((a, index) => {\r\n                            return (\r\n                                <TableRow key={index}>\r\n                                    <TableCell>\r\n                                        <Typography>{index + 1}</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography>{a.name}</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography>{a.cname}</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography>{a.phone}</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Typography>{a.type === 1 ? \"-\" : a.quantity}</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography>\r\n                                            {moment(a.created).format(\"DD-MM-YYYY\")}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\"><Tooltip title=\"Delete\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                if (\r\n                                                    window.confirm(\r\n                                                        `Are you sure you want to delete this order? You cannot recover once deleted!`\r\n                                                    )\r\n                                                ) {\r\n                                                    return deleteOrder(a.id);\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            <Delete color=\"error\" />\r\n                                        </IconButton>\r\n                                    </Tooltip></TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            );\r\n        } else {\r\n            return (\r\n                <Typography align=\"center\" variant=\"h6\" style={{ marginTop: 100 }}>\r\n                    There is no bulk order yet\r\n                </Typography>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container style={{ marginBottom: 380 }}>\r\n            <Typography variant=\"h6\">\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    onClick={() => {\r\n                        history.goBack();\r\n                    }}\r\n                >\r\n                    <ArrowBack />\r\n                </IconButton>\r\n        Bulk Orders\r\n      </Typography>\r\n            <Divider style={{ marginTop: 20 }} />\r\n            {renderList()}\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nexport default connect(null, { logout })(withRouter(BulkOrder));\r\n"],"sourceRoot":""}