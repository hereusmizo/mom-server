{"version":3,"sources":["pages/OrderHistory.js"],"names":["connect","state","profile","logout","withRouter","props","useState","productOrder","setProductOrder","toast","settoast","message","setmessage","status","setstatus","useEffect","document","title","Object","keys","length","fetchProductOrders","a","localStorage","getItem","api","get","id","headers","Authorization","response","data","deleteOrder","delete","filter","green","red","style","marginBottom","variant","marginTop","size","align","colSpan","map","index","key","productname","type","quantity","moment","created","format","onClick","window","confirm","color","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","backgroundColor","action"],"mappings":"0WA8KeA,uBAJS,SAACC,GACvB,MAAO,CAAEC,QAASD,EAAMC,WAGc,CAAEC,YAA3BH,CAAqCI,aAvJ/B,SAACC,GAAW,IACvBF,EAAoBE,EAApBF,OAAQD,EAAYG,EAAZH,QADc,EAEUI,mBAAS,IAFnB,mBAEvBC,EAFuB,KAETC,EAFS,OAGJF,oBAAS,GAHL,mBAGvBG,EAHuB,KAGhBC,EAHgB,OAIAJ,mBAAS,MAJT,mBAIvBK,EAJuB,KAIdC,EAJc,OAKFN,mBAAS,MALP,mBAKvBO,EALuB,KAKfC,EALe,KAM9BC,qBAAU,WACRC,SAASC,MAAQ,gBACbC,OAAOC,KAAKjB,GAASkB,QAAQC,MAChC,CAACH,OAAOC,KAAKjB,GAASkB,SAEzB,IAAMC,EAAkB,uCAAG,4BAAAC,EAAA,0DACrBC,aAAaC,QAAQ,gBADA,0CAGAC,IAAIC,IAAJ,6BAA8BxB,EAAQyB,IAAM,CACjEC,QAAS,CACPC,cAAe,UAAYN,aAAaC,QAAQ,mBAL7B,cAGjBM,EAHiB,yBAQhBtB,EAAgBsB,EAASC,KAAKA,OARd,mHAalB5B,KAbkB,yDAAH,qDAiBlB6B,EAAW,uCAAG,WAAOL,GAAP,SAAAL,EAAA,0DACdC,aAAaC,QAAQ,gBADP,0CAGRC,IAAIQ,OAAJ,6BAAiCN,GAAM,CAC3CC,QAAS,CACPC,cAAe,UAAYN,aAAaC,QAAQ,mBALtC,cAQdhB,EAAgBD,EAAa2B,QAAO,SAACZ,GAAD,OAAOA,EAAEK,KAAOA,MAEpDb,EAAUqB,IAAM,MAChBvB,EAAW,8BAXG,kBAYPF,GAAS,IAZF,yCAcdI,EAAUsB,IAAI,MACdxB,EAAW,mCAfG,kBAgBPF,GAAS,IAhBF,yDAmBTP,KAnBS,0DAAH,sDAiFjB,OACE,kBAAC,IAAD,CAAWkC,MAAO,CAAEC,aAAc,MAChC,kBAAC,IAAD,CAAYC,QAAQ,MAApB,oBACA,kBAAC,IAAD,CAASF,MAAO,CAAEG,UAAW,MA5D3BjC,EAAaa,OAEb,kBAAC,IAAD,CAAOqB,KAAK,SACV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,gBACA,kBAAC,IAAD,CAAWC,MAAM,UAAjB,OACA,kBAAC,IAAD,CAAWC,QAAS,GAApB,gBAGJ,kBAAC,IAAD,KACGpC,EAAaqC,KAAI,SAACtB,EAAGuB,GACpB,OACE,kBAAC,IAAD,CAAUC,IAAKD,GACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAavB,EAAEyB,cAEjB,kBAAC,IAAD,CAAWL,MAAM,UACf,kBAAC,IAAD,KAAwB,IAAXpB,EAAE0B,KAAa,IAAM1B,EAAE2B,WAEtC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGC,IAAO5B,EAAE6B,SAASC,OAAO,gBAG9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASnC,MAAM,UACb,kBAAC,IAAD,CACEoC,QAAS,WACP,GACEC,OAAOC,QAAP,gFAIA,OAAOvB,EAAYV,EAAEK,MAIzB,kBAAC,IAAD,CAAQ6B,MAAM,qBAY9B,kBAAC,IAAD,CAAYd,MAAM,SAASH,QAAQ,KAAKF,MAAO,CAAEG,UAAW,MAA5D,6BAaF,kBAAC,IAAD,CACEiB,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMnD,EACNoD,iBAAkB,IAClBC,QAAS,WACPpD,GAAS,KAGX,kBAAC,IAAD,CACE2B,MAAO,CAAE0B,gBAAiBlD,GAC1BF,QAASA,EACTmD,QAAS,WACPpD,GAAS,IAEXsD,OACE,kBAAC,IAAD,CACElB,IAAI,QACJU,MAAM,UACNH,QAAS,kBAAM3C,GAAS,KAExB,kBAAC,IAAD","file":"static/js/32.4b6cd217.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  Snackbar,\r\n  SnackbarContent,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Close, Delete } from \"@material-ui/icons\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\nimport api from \"../api/api\";\r\nimport { logout } from \"../actions\";\r\n\r\nconst OrderHistory = (props) => {\r\n  const { logout, profile } = props;\r\n  const [productOrder, setProductOrder] = useState([]);\r\n  const [toast, settoast] = useState(false);\r\n  const [message, setmessage] = useState(null);\r\n  const [status, setstatus] = useState(null);\r\n  useEffect(() => {\r\n    document.title = \"Order History\";\r\n    if (Object.keys(profile).length) fetchProductOrders();\r\n  }, [Object.keys(profile).length]);\r\n\r\n  const fetchProductOrders = async () => {\r\n    if (localStorage.getItem(\"mom-customer\")) {\r\n    try {\r\n      const response = await api.get(`/api/product-order/${profile.id}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"mom-customer\"),\r\n        },\r\n      });\r\n      return setProductOrder(response.data.data);\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  }else{\r\n    return logout();\r\n  }\r\n  };\r\n\r\n  const deleteOrder = async (id) => {\r\n    if (localStorage.getItem(\"mom-customer\")) {\r\n      try {\r\n        await api.delete(`/api/product-order/${id}`, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-customer\"),\r\n          },\r\n        });\r\n        setProductOrder(productOrder.filter((a) => a.id !== id));\r\n\r\n        setstatus(green[700]);\r\n        setmessage(\"Order Deleted Successfully\");\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong. Try again\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const renderList = () => {\r\n    if (productOrder.length) {\r\n      return (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Product</TableCell>\r\n              <TableCell align=\"center\">QTY</TableCell>\r\n              <TableCell colSpan={2}>Order Date</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {productOrder.map((a, index) => {\r\n              return (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <Typography>{a.productname}</Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography>{a.type === 1 ? \"-\" : a.quantity}</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>\r\n                      {moment(a.created).format(\"DD-MM-YYYY\")}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Tooltip title=\"Delete\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          if (\r\n                            window.confirm(\r\n                              `Are you sure you want to delete this order? You cannot recover once deleted!`\r\n                            )\r\n                          ) {\r\n                            return deleteOrder(a.id);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Delete color=\"primary\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography align=\"center\" variant=\"h6\" style={{ marginTop: 100 }}>\r\n          You have no order history\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginBottom: 380 }}>\r\n      <Typography variant=\"h6\">My Order History</Typography>\r\n      <Divider style={{ marginTop: 20 }} />\r\n      {renderList()}\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={toast}\r\n        autoHideDuration={3000}\r\n        onClose={() => {\r\n          settoast(false);\r\n        }}\r\n      >\r\n        <SnackbarContent\r\n          style={{ backgroundColor: status }}\r\n          message={message}\r\n          onClose={() => {\r\n            settoast(false);\r\n          }}\r\n          action={\r\n            <IconButton\r\n              key=\"close\"\r\n              color=\"inherit\"\r\n              onClick={() => settoast(false)}\r\n            >\r\n              <Close />\r\n            </IconButton>\r\n          }\r\n        ></SnackbarContent>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapstatetoprops = (state) => {\r\n  return { profile: state.profile };\r\n};\r\n\r\nexport default connect(mapstatetoprops, { logout })(withRouter(OrderHistory));\r\n"],"sourceRoot":""}