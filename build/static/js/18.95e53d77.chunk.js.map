{"version":3,"sources":["api/baseurl.js","../node_modules/@material-ui/icons/esm/Close.js","pages/BulkProduct.js"],"names":["createSvgIcon","React","createElement","d","Login","lazy","Registration","connect","state","auth","profile","useState","openMainDialog","setOpenMainDialog","values","setValues","product","setProduct","openSuccessDialog","setOpenSuccessDialog","openLoginDialog","setOpenLoginDialog","openRegistrationDialog","setOpenRegistrationDialog","quantity","formValues","setFormValues","useEffect","document","title","fetchProducts","a","api","get","response","data","submit","post","bulk","id","customer","name","alert","maxWidth","variant","gutterBottom","style","fontWeight","marginBottom","marginTop","color","length","container","spacing","map","i","cursor","onClick","item","key","xs","sm","md","lg","xl","border","boxShadow","padding","alt","src","baseurl","image","objectFit","height","width","backgroundColor","position","opacity","renderProducts","scroll","fullWidth","open","onClose","display","justifyContent","whiteSpace","description","margin","type","size","marginRight","value","onChange","e","target","disabled","window","confirm","renderMainDialog","flexDirection","alignItems","align","borderRadius","dividers","fallback"],"mappings":"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","file":"static/js/18.95e53d77.chunk.js","sourcesContent":["// export default \"http://localhost:5000/\";\r\nexport default \"https://missionorganicmizoram.com/\";\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React, { lazy, useEffect, useState, Suspense } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  CircularProgress,\r\n  Button,\r\n  Dialog,\r\n  IconButton,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport api from \"../api/api\";\r\nimport baseurl from \"../api/baseurl\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Login = lazy(() => import(\"../components/Login\"));\r\nconst Registration = lazy(() => import(\"../components/Registration\"));\r\nconst BulkProduct = ({ auth, profile }) => {\r\n  const [openMainDialog, setOpenMainDialog] = useState(false);\r\n  const [values, setValues] = useState({});\r\n  const [product, setProduct] = useState([]);\r\n  const [openSuccessDialog, setOpenSuccessDialog] = useState(false);\r\n  const [openLoginDialog, setOpenLoginDialog] = useState(false);\r\n  const [openRegistrationDialog, setOpenRegistrationDialog] = useState(false);\r\n  const [formValues, setFormValues] = useState({\r\n    quantity: 0,\r\n  });\r\n  useEffect(() => {\r\n    document.title = \"Bulk Products\";\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await api.get(`/api/bulk`);\r\n      return setProduct(response.data.data);\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const submit = async () => {\r\n    // e.preventDefault();\r\n    try {\r\n      // setWait(true);\r\n\r\n      await api.post(`/api/bulk-order`, {\r\n        bulk: values.id,\r\n        customer: profile.id,\r\n        name: values.name,\r\n        quantity: formValues.quantity\r\n      });\r\n\r\n      // setWait(false);\r\n      // setOpenDialog(false);\r\n      setOpenSuccessDialog(true);\r\n    } catch (err) {\r\n      return alert(\"Sorry, something went wrong! Please try again.\");\r\n    }\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    if (product.length)\r\n      return (\r\n        <Grid container style={{ marginTop: 20 }} spacing={3}>\r\n          {product\r\n\r\n            .map((a, i) => {\r\n              return (\r\n                <Grid\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    setValues(a);\r\n                    setOpenMainDialog(true);\r\n                  }}\r\n                  item\r\n                  key={i}\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={6}\r\n                  lg={3}\r\n                  xl={3}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid #eee\",\r\n                      boxShadow: \"1px 1px 8px #ddd\",\r\n                      padding: 0,\r\n\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt={a.name}\r\n                      src={`${baseurl}${a.image}`}\r\n                      style={{ objectFit: \"contain\", height: 220, width: \"100%\" }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#555\",\r\n                        position: \"sticky\",\r\n                        opacity: 0.8,\r\n                        marginTop: -45,\r\n                        padding: 10,\r\n                      }}\r\n                    >\r\n                      <Typography style={{ color: \"white\", fontWeight: 500 }}>\r\n                        {a.name}\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              );\r\n            })}\r\n        </Grid>\r\n      );\r\n  };\r\n\r\n  const renderMainDialog = () => {\r\n    if (values) {\r\n      return (\r\n        <Dialog\r\n          scroll=\"body\"\r\n          fullWidth\r\n          maxWidth=\"xs\"\r\n          open={openMainDialog}\r\n          onClose={() => {\r\n            setValues({});\r\n            setOpenMainDialog(false);\r\n          }}\r\n        >\r\n          <div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                width: \"100%\",\r\n                position: \"absolute\",\r\n              }}\r\n            >\r\n              <IconButton\r\n                onClick={() => {\r\n                  setValues({});\r\n                  setOpenMainDialog(false);\r\n                }}\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n\r\n              }}\r\n            >\r\n              <img\r\n                alt={values.name}\r\n                src={`${baseurl}${values.image}`}\r\n                style={{ objectFit: \"contain\", height: 300, width: \"100%\" }}\r\n              />\r\n            </div>\r\n            <div style={{ padding: 10 }}>\r\n              <Typography variant=\"h6\">{values.name}</Typography>\r\n              <Typography style={{ whiteSpace: \"pre-line\", marginTop: 10 }}>\r\n                {values.description}\r\n              </Typography>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  marginTop: 20,\r\n                }}\r\n              >\r\n                <Typography style={{ margin: 5 }}>\r\n                  Quantity (in Metric Ton):\r\n                </Typography>\r\n                <TextField\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  style={{ width: 80, marginRight: 15 }}\r\n                  value={formValues.quantity}\r\n                  onChange={(e) => {\r\n                    setFormValues({ ...formValues, quantity: e.target.value });\r\n                  }}\r\n                />\r\n                <Button\r\n                  disabled={formValues.quantity > 0 ? false : true}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (auth) {\r\n                      if (\r\n                        window.confirm(\r\n                          `Are you sure you want to order this product?`\r\n                        )\r\n                      ) {\r\n                        return submit();\r\n                      }\r\n                    } else {\r\n                      setOpenLoginDialog(true);\r\n                    }\r\n                  }}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Typography variant=\"h5\" gutterBottom style={{ fontWeight: 700, marginBottom: 20, marginTop: 80 }} color=\"primary\">\r\n        Bulk Products\r\n          </Typography>\r\n      {renderProducts()}\r\n      {renderMainDialog()}\r\n\r\n\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n        open={openSuccessDialog}\r\n        onClose={() => {\r\n          setOpenSuccessDialog(false);\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: 20,\r\n          }}\r\n        >\r\n          <img\r\n            alt=\"Success\"\r\n            src=\"/success.png\"\r\n            style={{\r\n              width: 80,\r\n            }}\r\n          />\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h6\"\r\n            style={{\r\n              color: \"#009688\",\r\n            }}\r\n          >\r\n            Your order has been submitted successfuly\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h6\"\r\n            style={{\r\n              color: \"#009688\",\r\n            }}\r\n          >\r\n            We shall contact you soon\r\n          </Typography>\r\n          <Button\r\n            onClick={() => {\r\n              setOpenSuccessDialog(false);\r\n            }}\r\n            style={{ marginTop: 20, borderRadius: 50 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            OK\r\n          </Button>\r\n        </div>\r\n      </Dialog>\r\n      {/* <Dialog\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n        open={openDialog}\r\n        onClose={() => {\r\n          setOpenDialog(false);\r\n        }}\r\n      >\r\n        <DialogTitle>Note</DialogTitle>\r\n        <DialogContent dividers>\r\n          <form onSubmit={submit}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={5}\r\n              margin=\"dense\"\r\n              size=\"small\"\r\n              label=\"Please type any words to us\"\r\n              value={formValues.note}\r\n              onChange={(e) =>\r\n                setFormValues({ ...formValues, note: e.target.value })\r\n              }\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                marginTop: 10,\r\n              }}\r\n            >\r\n              <Button\r\n                disabled={wait}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog> */}\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n        open={openLoginDialog}\r\n        onClose={() => {\r\n          setOpenLoginDialog(false);\r\n        }}\r\n      >\r\n        <DialogTitle>Login</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Suspense\r\n            fallback={\r\n              <div\r\n                style={{\r\n                  marginTop: 400,\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            }\r\n          >\r\n            <Login\r\n              setOpenRegistrationDialog={setOpenRegistrationDialog}\r\n              setOpenLoginDialog={setOpenLoginDialog}\r\n            />\r\n          </Suspense>\r\n        </DialogContent>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n        open={openRegistrationDialog}\r\n        onClose={() => {\r\n          setOpenRegistrationDialog(false);\r\n        }}\r\n      >\r\n        <DialogTitle>Registration</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Suspense\r\n            fallback={\r\n              <div\r\n                style={{\r\n                  marginTop: 400,\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            }\r\n          >\r\n            <Registration\r\n              setOpenRegistrationDialog={setOpenRegistrationDialog}\r\n              setOpenLoginDialog={setOpenLoginDialog}\r\n            />\r\n          </Suspense>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(BulkProduct);\r\n"],"sourceRoot":""}