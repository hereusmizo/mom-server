{"version":3,"sources":["pages/cms/Helpline.js"],"names":["connect","logout","withRouter","props","history","useState","id","title","phone","formvalues","setformvalues","wait","setwait","createdialog","setcreatedialog","editdialog","seteditdialog","toast","settoast","message","setmessage","status","setstatus","helpline","setHelpline","useEffect","document","fetchHelpline","a","api","get","response","data","submit","e","preventDefault","localStorage","getItem","post","headers","Authorization","green","red","submitedit","patch","map","deletesubmit","delete","filter","variant","edge","onClick","goBack","style","display","marginTop","color","startIcon","length","size","align","padding","index","hover","key","cursor","fullWidth","maxWidth","open","onClose","dividers","onSubmit","required","margin","label","value","onChange","target","justifyContent","disabled","type","marginRight","window","confirm","anchorOrigin","vertical","horizontal","autoHideDuration","backgroundColor","action"],"mappings":"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","file":"static/js/36.9684c6bc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  IconButton,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  Snackbar,\r\n  SnackbarContent,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ArrowBack, Close, Add } from \"@material-ui/icons\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\nimport api from \"../../api/api\";\r\nimport { logout } from \"../../actions\";\r\n\r\nconst Helpline = (props) => {\r\n  const { logout, history } = props;\r\n  const [formvalues, setformvalues] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    phone: \"\",\r\n  });\r\n  const [wait, setwait] = useState(false);\r\n  const [createdialog, setcreatedialog] = useState(false);\r\n  const [editdialog, seteditdialog] = useState(false);\r\n  const [toast, settoast] = useState(false);\r\n  const [message, setmessage] = useState(null);\r\n  const [status, setstatus] = useState(null);\r\n\r\n  const [helpline, setHelpline] = useState([]);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Helpline\";\r\n    fetchHelpline();\r\n  }, []);\r\n\r\n  const fetchHelpline = async () => {\r\n    try {\r\n      const response = await api.get(`/api/helpline`);\r\n      return setHelpline(response.data.data);\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setwait(true);\r\n        const response = await api.post(`/api/helpline`, formvalues, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n        setHelpline([\r\n          ...helpline,\r\n          {\r\n            ...formvalues,\r\n            id: response.data.id,\r\n          },\r\n        ]);\r\n        setformvalues({ id: \"\", title: \"\", phone: \"\" });\r\n        setstatus(green[700]);\r\n        setmessage(\"Helpline Added Successfully\");\r\n        setwait(false);\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setwait(false);\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const submitedit = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setwait(true);\r\n        await api.patch(`/api/helpline/${formvalues.id}`, formvalues, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n        setHelpline(\r\n          helpline.map((a) => (a.id === formvalues.id ? formvalues : a))\r\n        );\r\n        setformvalues({ id: \"\", title: \"\", phone: \"\" });\r\n        seteditdialog(false);\r\n        setstatus(green[700]);\r\n        setmessage(\"Helpline Updated Successfully\");\r\n        setwait(false);\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setwait(false);\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const deletesubmit = async () => {\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setwait(true);\r\n        await api.delete(\r\n          `/api/helpline/${formvalues.id}`,\r\n\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n            },\r\n          }\r\n        );\r\n        setHelpline(helpline.filter((a) => a.id !== formvalues.id));\r\n        setformvalues({ id: \"\", title: \"\", phone: \"\" });\r\n        seteditdialog(false);\r\n        setstatus(green[700]);\r\n        setmessage(\"Helpline Deleted Successfully\");\r\n        setwait(false);\r\n        return settoast(true);\r\n      } catch (err) {\r\n        setwait(false);\r\n        setstatus(red[700]);\r\n        setmessage(\"Something went wrong\");\r\n        return settoast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const renderlist = () => {\r\n    if (helpline.length) {\r\n      return (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\" padding=\"checkbox\">\r\n                #\r\n              </TableCell>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell>Phone Number</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {helpline.map((a, index) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={index}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    setformvalues({ ...a });\r\n                    seteditdialog(true);\r\n                  }}\r\n                >\r\n                  <TableCell>\r\n                    <Typography align=\"center\">{index + 1}</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>{a.title}</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>{a.phone}</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography align=\"center\" variant=\"h6\" style={{ marginTop: 300 }}>\r\n          NO DATA TO DISPLAY!\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderdialog = () => (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={createdialog}\r\n      onClose={() => {\r\n        setformvalues({ id: \"\", title: \"\", phone: \"\" });\r\n        setcreatedialog(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Add New Helpline</DialogTitle>\r\n      <DialogContent dividers>\r\n        <form onSubmit={submit}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Helpline Title/Name\"\r\n            value={formvalues.title}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, title: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Phone Number\"\r\n            value={formvalues.phone}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, phone: e.target.value })\r\n            }\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={wait}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setformvalues({\r\n                  id: \"\",\r\n                  title: \"\",\r\n                  phone: \"\",\r\n                });\r\n                setcreatedialog(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n\r\n  const rendereditdialog = () => (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={editdialog}\r\n      onClose={() => {\r\n        setformvalues({ id: \"\", title: \"\", phone: \"\" });\r\n        seteditdialog(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Edit Helpline</DialogTitle>\r\n      <DialogContent dividers>\r\n        <form onSubmit={submitedit}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Helpline Title/Name\"\r\n            value={formvalues.title}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, title: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Phone Number\"\r\n            value={formvalues.phone}\r\n            onChange={(e) =>\r\n              setformvalues({ ...formvalues, phone: e.target.value })\r\n            }\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={wait}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              disabled={wait}\r\n              style={{ marginRight: 10 }}\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete ${formvalues.title}? You cannot recover once deleted!`\r\n                  )\r\n                ) {\r\n                  return deletesubmit();\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setformvalues({\r\n                  id: \"\",\r\n                  title: \"\",\r\n                  phone: \"\",\r\n                });\r\n                seteditdialog(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h6\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          onClick={() => {\r\n            history.goBack();\r\n          }}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n        Helpline Management\r\n      </Typography>\r\n      <div style={{ display: \"block\", marginTop: 8 }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<Add />}\r\n          onClick={() => setcreatedialog(true)}\r\n        >\r\n          Add New Helpline\r\n        </Button>\r\n      </div>\r\n      <Divider style={{ marginTop: 20 }} />\r\n      {renderlist()}\r\n      {renderdialog()}\r\n      {rendereditdialog()}\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={toast}\r\n        autoHideDuration={3000}\r\n        onClose={() => {\r\n          settoast(false);\r\n        }}\r\n      >\r\n        <SnackbarContent\r\n          style={{ backgroundColor: status }}\r\n          message={message}\r\n          onClose={() => {\r\n            settoast(false);\r\n          }}\r\n          action={\r\n            <IconButton\r\n              key=\"close\"\r\n              color=\"inherit\"\r\n              onClick={() => settoast(false)}\r\n            >\r\n              <Close />\r\n            </IconButton>\r\n          }\r\n        ></SnackbarContent>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(null, { logout })(withRouter(Helpline));\r\n"],"sourceRoot":""}