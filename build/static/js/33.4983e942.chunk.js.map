{"version":3,"sources":["pages/cms/Administrators.js"],"names":["connect","logout","withRouter","props","history","useState","id","name","phone","email","status","formValues","setFormValues","isWait","setIsWait","dialog","setDialog","openEditDialog","setOpenEditDialog","toast","setToast","message","setMessage","setStatus","admin","setAdmin","useEffect","fetchAdmins","document","title","a","localStorage","getItem","api","get","headers","Authorization","response","data","submit","e","preventDefault","post","green","red","submitedit","patch","map","deletesubmit","delete","filter","variant","edge","onClick","goBack","color","style","marginTop","size","length","align","padding","index","hover","key","cursor","renderlist","fullWidth","maxWidth","open","onClose","dividers","onSubmit","required","margin","label","value","onChange","target","type","display","justifyContent","disabled","marginRight","labelId","window","confirm","anchorOrigin","vertical","horizontal","autoHideDuration","backgroundColor","action"],"mappings":"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","file":"static/js/33.4983e942.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  IconButton,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Snackbar,\r\n  SnackbarContent,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ArrowBack, Close } from \"@material-ui/icons\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\nimport api from \"../../api/api\";\r\nimport { logout } from \"../../actions\";\r\n\r\nconst Administrators = (props) => {\r\n  const { history, logout } = props;\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    status: \"\",\r\n  });\r\n  const [isWait, setIsWait] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [openEditDialog, setOpenEditDialog] = useState(false);\r\n  const [toast, setToast] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n  const [admin, setAdmin] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAdmins();\r\n    document.title = \"Administrators\";\r\n  }, []);\r\n\r\n  const fetchAdmins = async () => {\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        const response = await api.get(`/api/admin`, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n        return setAdmin(response.data.data);\r\n      } catch (err) {\r\n        return;\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setIsWait(true);\r\n        const response = await api.post(`/api/admin`, formValues, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n\r\n        setAdmin([\r\n          ...admin,\r\n          {\r\n            id: response.data.id,\r\n            ...formValues,\r\n            status: 1,\r\n          },\r\n        ]);\r\n\r\n        setFormValues({\r\n          id: \"\",\r\n          name: \"\",\r\n          phone: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n        });\r\n\r\n        setStatus(green[700]);\r\n        setMessage(\"Administrator Added Successfully\");\r\n        setIsWait(false);\r\n        return setToast(true);\r\n      } catch (err) {\r\n        setIsWait(false);\r\n        setStatus(red[700]);\r\n        setMessage(\"Something went wrong\");\r\n        return setToast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const submitedit = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setIsWait(true);\r\n        await api.patch(`/api/admin/${formValues.id}`, formValues, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n        setAdmin(admin.map((a) => (a.id === formValues.id ? formValues : a)));\r\n\r\n        setFormValues({\r\n          id: \"\",\r\n          name: \"\",\r\n          phone: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n        });\r\n\r\n        setOpenEditDialog(false);\r\n        setStatus(green[700]);\r\n        setMessage(\"Administrator Updated Successfully\");\r\n        setIsWait(false);\r\n        return setToast(true);\r\n      } catch (err) {\r\n        setIsWait(false);\r\n        setStatus(red[700]);\r\n        setMessage(\"Something went wrong\");\r\n        return setToast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const deletesubmit = async () => {\r\n    if (localStorage.getItem(\"mom-admin\")) {\r\n      try {\r\n        setIsWait(true);\r\n        await api.delete(`/api/admin/${formValues.id}`, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"mom-admin\"),\r\n          },\r\n        });\r\n        setAdmin(admin.filter((a) => a.id !== formValues.id));\r\n        setFormValues({\r\n          id: \"\",\r\n          name: \"\",\r\n          phone: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n        });\r\n\r\n        setOpenEditDialog(false);\r\n        setStatus(green[700]);\r\n        setMessage(\"Administrator Deleted Successfully\");\r\n        setIsWait(false);\r\n        return setToast(true);\r\n      } catch (err) {\r\n        setIsWait(false);\r\n        setStatus(red[700]);\r\n        setMessage(\"Something went wrong\");\r\n        return setToast(true);\r\n      }\r\n    } else {\r\n      return logout();\r\n    }\r\n  };\r\n\r\n  const renderlist = () => {\r\n    if (admin.length) {\r\n      return (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\" padding=\"checkbox\">\r\n                #\r\n              </TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>Phone</TableCell>\r\n              <TableCell align=\"center\">Active</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {admin.map((a, index) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={index}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    setFormValues(a);\r\n                    setOpenEditDialog(true);\r\n                  }}\r\n                >\r\n                  <TableCell>\r\n                    <Typography align=\"center\">{index + 1}</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>{a.name}</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>{a.email}</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>{a.phone}</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      align=\"center\"\r\n                      style={{ color: a.status ? green[700] : red[700] }}\r\n                    >\r\n                      {a.status ? \"Yes\" : \"No\"}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderdialog = () => (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={dialog}\r\n      onClose={() => {\r\n        setFormValues({\r\n          id: \"\",\r\n          name: \"\",\r\n          phone: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n        });\r\n        setDialog(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Create New Administrator</DialogTitle>\r\n      <DialogContent dividers>\r\n        <form onSubmit={submit}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Administrator Name\"\r\n            value={formValues.name}\r\n            onChange={(e) =>\r\n              setFormValues({ ...formValues, name: e.target.value })\r\n            }\r\n          />\r\n\r\n          <TextField\r\n            required\r\n            type=\"email\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Email\"\r\n            value={formValues.email}\r\n            onChange={(e) =>\r\n              setFormValues({ ...formValues, email: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Phone\"\r\n            type=\"number\"\r\n            value={formValues.phone}\r\n            onChange={(e) =>\r\n              setFormValues({ ...formValues, phone: e.target.value })\r\n            }\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={isWait}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Save\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setFormValues({\r\n                  id: \"\",\r\n                  name: \"\",\r\n                  phone: \"\",\r\n                  email: \"\",\r\n                  status: \"\",\r\n                });\r\n                setDialog(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n  const rendereditdialog = () => (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={openEditDialog}\r\n      onClose={() => {\r\n        setFormValues({\r\n          id: \"\",\r\n          name: \"\",\r\n          phone: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n        });\r\n        setOpenEditDialog(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Edit Administrator</DialogTitle>\r\n      <DialogContent dividers>\r\n        <form onSubmit={submitedit}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Administrator Name\"\r\n            value={formValues.name}\r\n            onChange={(e) =>\r\n              setFormValues({ ...formValues, name: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            required\r\n            type=\"email\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Email\"\r\n            value={formValues.email}\r\n            onChange={(e) =>\r\n              setFormValues({ ...formValues, email: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            label=\"Phone\"\r\n            type=\"number\"\r\n            value={formValues.phone}\r\n            onChange={(e) =>\r\n              setFormValues({ ...formValues, phone: e.target.value })\r\n            }\r\n          />\r\n\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            required\r\n          >\r\n            <InputLabel id=\"select-active\">Active</InputLabel>\r\n            <Select\r\n              label=\"Active\"\r\n              labelId=\"select-active\"\r\n              value={formValues.status}\r\n              onChange={(e) => {\r\n                setFormValues({\r\n                  ...formValues,\r\n                  status: e.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <MenuItem value={1}>Yes</MenuItem>\r\n              <MenuItem value={0}>No</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={isWait}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              disabled={isWait}\r\n              style={{ marginRight: 10 }}\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    `Are you sure you want to delete ${formValues.name}? You cannot recover once deleted!`\r\n                  )\r\n                ) {\r\n                  return deletesubmit();\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setFormValues({\r\n                  id: \"\",\r\n                  name: \"\",\r\n                  phone: \"\",\r\n                  email: \"\",\r\n                  status: \"\",\r\n                });\r\n                setOpenEditDialog(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h6\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          onClick={() => {\r\n            history.goBack();\r\n          }}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n        Administrators Management\r\n      </Typography>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ marginTop: 10 }}\r\n        size=\"small\"\r\n        onClick={() => setDialog(true)}\r\n      >\r\n        Add New\r\n      </Button>\r\n      <Divider style={{ marginTop: 20 }} />\r\n      {renderlist()}\r\n      {renderdialog()}\r\n      {rendereditdialog()}\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={toast}\r\n        autoHideDuration={3000}\r\n        onClose={() => {\r\n          setToast(false);\r\n        }}\r\n      >\r\n        <SnackbarContent\r\n          style={{ backgroundColor: status }}\r\n          message={message}\r\n          onClose={() => {\r\n            setToast(false);\r\n          }}\r\n          action={\r\n            <IconButton\r\n              key=\"close\"\r\n              color=\"inherit\"\r\n              onClick={() => setToast(false)}\r\n            >\r\n              <Close />\r\n            </IconButton>\r\n          }\r\n        ></SnackbarContent>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(null, { logout })(withRouter(Administrators));\r\n"],"sourceRoot":""}