{"version":3,"sources":["api/baseurl.js","pages/News.js"],"names":["News","useState","news","setNews","images","setImages","currentImage","setCurrentImage","isViewerOpen","setIsViewerOpen","useEffect","document","title","fetchNews","a","api","get","response","data","maxWidth","variant","gutterBottom","style","fontWeight","marginBottom","marginTop","color","length","map","i","container","display","border","boxShadow","spacing","key","item","xs","sm","md","lg","xl","disabled","photo","onClick","src","baseurl","alt","objectFit","width","borderRadius","paragraph","whiteSpace","componentDecorator","decoratedHref","decoratedText","target","href","body","flexDirection","alignItems","align","imgs","currImg","isOpen","backdropCloseable","onClickPrev","onClickNext","onClose","renderImageViewer"],"mappings":"+GACe,0C,qLC2JAA,UAtJF,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEWF,mBAAS,IAFpB,mBAEVG,EAFU,KAEFC,EAFE,OAGuBJ,mBAAS,GAHhC,mBAGVK,EAHU,KAGIC,EAHJ,OAIuBN,oBAAS,GAJhC,mBAIVO,EAJU,KAIIC,EAJJ,KAMjBC,qBAAU,WACRC,SAASC,MAAQ,OAEjBC,MACC,IAEH,IAAMA,EAAS,uCAAG,4BAAAC,EAAA,+EAESC,IAAIC,IAAJ,aAFT,cAERC,EAFQ,yBAGPd,EAAQc,EAASC,KAAKA,OAHf,mHAAH,qDAyHf,OACE,kBAAC,IAAD,CAAWC,SAAS,MAClB,kBAAC,IAAD,CACEC,QAAQ,KACRC,cAAY,EACZC,MAAO,CAAEC,WAAY,IAAKC,aAAc,GAAIC,UAAW,IACvDC,MAAM,WAJR,YA1FExB,EAAKyB,OAEL,yBAAKL,MAAO,CAAEG,UAAW,KACtBvB,EAAK0B,KAAI,SAACd,EAAGe,GACZ,OACE,kBAAC,IAAD,CACEC,WAAS,EACTR,MAAO,CACLS,QAAS,OACTC,OAAQ,iBACRC,UAAW,mBACXR,UAAW,IAEbS,QAAS,EACTC,IAAKN,GAEL,kBAAC,IAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3C,kBAAC,IAAD,CACEC,UAAU5B,EAAE6B,MACZC,QAAS,WACH9B,EAAE6B,QACJtC,EAAU,CACR,CACEwC,IAAI,GAAD,OAAKC,KAAL,OAAehC,EAAE6B,UAGxBlC,GAAgB,MAIpB,yBACEsC,IAAKjC,EAAEF,MACPiC,IAAK/B,EAAE6B,MAAF,UAAaG,KAAb,OAAuBhC,EAAE6B,OAAU,eACxCrB,MAAO,CACL0B,UAAW,UACXC,MAAO,OACPjB,OAAQ,oBACRC,UAAW,sBACXiB,aAAc,OAKtB,kBAAC,IAAD,CAAMd,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3C,kBAAC,IAAD,CAAYrB,QAAQ,MAAMN,EAAEF,OAC5B,kBAAC,IAAD,CAAYuC,WAAS,EAAC7B,MAAO,CAAE8B,WAAY,aACzC,kBAAC,IAAD,CACEC,mBAAoB,SAClBC,EACAC,EACApB,GAHkB,OAKlB,uBACEqB,OAAO,QACPC,KAAMH,EACNnB,IAAKA,EACLb,MAAO,CAAEI,MAAO,YAEf6B,KAIJzC,EAAE4C,aAWjB,yBACEpC,MAAO,CACLG,UAAW,IACXM,QAAS,OACT4B,cAAe,SACfC,WAAY,WAGd,kBAAC,IAAD,CAAYC,MAAM,SAASzC,QAAQ,MAAnC,0BA1GkB,WACxB,GAAIZ,EACF,OACE,6BACE,kBAAC,IAAD,CACEsD,KAAM1D,EACN2D,QAASzD,EACT0D,OAAQxD,EACRyD,mBAAiB,EACjBC,YAAa,WACX3D,EAAgBD,EAAe,IAEjC6D,YAAa,kBAAM5D,EAAgBD,EAAe,IAClD8D,QAAS,WACP7D,EAAgB,GAChBF,EAAU,IACVI,GAAgB,OA6GvB4D","file":"static/js/26.b3c13e71.chunk.js","sourcesContent":["// export default \"http://localhost:5000/\";\r\nexport default \"https://missionorganicmizoram.com/\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Typography, Grid, CardActionArea } from \"@material-ui/core\";\r\nimport api from \"../api/api\";\r\nimport baseurl from \"../api/baseurl\";\r\nimport Linkify from \"react-linkify\";\r\nimport ImageViewer from \"react-images-viewer\";\r\nconst News = () => {\r\n  const [news, setNews] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"News\";\r\n\r\n    fetchNews();\r\n  }, []);\r\n\r\n  const fetchNews = async () => {\r\n    try {\r\n      const response = await api.get(`/api/news`);\r\n      return setNews(response.data.data);\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  };\r\n  const renderImageViewer = () => {\r\n    if (isViewerOpen) {\r\n      return (\r\n        <div>\r\n          <ImageViewer\r\n            imgs={images}\r\n            currImg={currentImage}\r\n            isOpen={isViewerOpen}\r\n            backdropCloseable\r\n            onClickPrev={() => {\r\n              setCurrentImage(currentImage - 1);\r\n            }}\r\n            onClickNext={() => setCurrentImage(currentImage + 1)}\r\n            onClose={() => {\r\n              setCurrentImage(0);\r\n              setImages([]);\r\n              setIsViewerOpen(false);\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderNews = () => {\r\n    if (news.length) {\r\n      return (\r\n        <div style={{ marginTop: 20 }}>\r\n          {news.map((a, i) => {\r\n            return (\r\n              <Grid\r\n                container\r\n                style={{\r\n                  display: \"flex\",\r\n                  border: \"1px solid #eee\",\r\n                  boxShadow: \"1px 1px 5px #ddd\",\r\n                  marginTop: 20,\r\n                }}\r\n                spacing={2}\r\n                key={i}\r\n              >\r\n                <Grid item xs={12} sm={12} md={3} lg={3} xl={3}>\r\n                  <CardActionArea\r\n                    disabled={a.photo ? false : true}\r\n                    onClick={() => {\r\n                      if (a.photo) {\r\n                        setImages([\r\n                          {\r\n                            src: `${baseurl}${a.photo}`,\r\n                          },\r\n                        ]);\r\n                        setIsViewerOpen(true);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt={a.title}\r\n                      src={a.photo ? `${baseurl}${a.photo}` : \"/logo512.png\"}\r\n                      style={{\r\n                        objectFit: \"contain\",\r\n                        width: \"100%\",\r\n                        border: \"1px solid #ff9100\",\r\n                        boxShadow: \"1px 1px 2px #ff9100\",\r\n                        borderRadius: 5,\r\n                      }}\r\n                    />\r\n                  </CardActionArea>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={9} lg={9} xl={9}>\r\n                  <Typography variant=\"h6\">{a.title}</Typography>\r\n                  <Typography paragraph style={{ whiteSpace: \"pre-line\" }}>\r\n                    <Linkify\r\n                      componentDecorator={(\r\n                        decoratedHref,\r\n                        decoratedText,\r\n                        key\r\n                      ) => (\r\n                        <a\r\n                          target=\"blank\"\r\n                          href={decoratedHref}\r\n                          key={key}\r\n                          style={{ color: \"#027502\" }}\r\n                        >\r\n                          {decoratedText}\r\n                        </a>\r\n                      )}\r\n                    >\r\n                      {a.body}\r\n                    </Linkify>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginTop: 100,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography align=\"center\" variant=\"h6\">\r\n            There is no news yet!\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Typography\r\n        variant=\"h5\"\r\n        gutterBottom\r\n        style={{ fontWeight: 700, marginBottom: 20, marginTop: 80 }}\r\n        color=\"primary\"\r\n      >\r\n        MOM NEWS\r\n      </Typography>\r\n\r\n      {renderNews()}\r\n      {renderImageViewer()}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default News;\r\n"],"sourceRoot":""}