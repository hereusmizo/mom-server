{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","../node_modules/@material-ui/core/esm/Accordion/Accordion.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","../node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","pages/FAQ.js"],"names":["useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","React","undefined","current","_React$useState","valueState","setValue","newValue","AccordionContext","Accordion","props","ref","arr","childrenProp","children","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","expandedProp","expanded","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutProperties","_useControlled","_useControlled2","_slicedToArray","setExpandedState","handleChange","event","_React$Children$toArr","toArray","_React$Children$toArr2","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","slice","contextValue","toggle","Paper","_extends","clsx","root","rounded","Provider","value","in","timeout","id","role","withStyles","theme","transition","duration","transitions","shortest","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","AccordionSummary","expandIcon","IconButtonProps","onBlur","onClick","onFocusVisible","focusedState","setFocusedState","_React$useContext","_React$useContext$dis","ButtonBase","focusRipple","disableRipple","component","focused","IconButton","edge","tabIndex","minHeight","padding","spacing","cursor","focus","disabledOpacity","flexGrow","transform","AccordionDetails","FAQ","useState","faq","setFAQ","useEffect","document","title","fetchFAQ","a","api","get","response","data","Container","maxWidth","Typography","variant","gutterBottom","style","fontWeight","color","length","map","i","key","border","boxShadow","ExpandMore","question","paragraph","whiteSpace","componentDecorator","decoratedHref","decoratedText","target","href","answer","flexDirection","alignItems","align"],"mappings":"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","file":"static/js/26.228079a9.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the accordion will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Container,\r\n  Typography,\r\n\r\n} from \"@material-ui/core\";\r\nimport api from \"../api/api\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\nimport ReactLinkify from \"react-linkify\";\r\n\r\nconst FAQ = () => {\r\n  const [faq, setFAQ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    document.title = \"FAQ\";\r\n    fetchFAQ();\r\n  }, []);\r\n\r\n  const fetchFAQ = async () => {\r\n    try {\r\n      const response = await api.get(`/api/faq`);\r\n      return setFAQ(response.data.data);\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const renderFAQ = () => {\r\n    if (faq.length) {\r\n      return (\r\n        <div style={{ marginTop: 20 }}>\r\n          {faq.map((a, i) => {\r\n            return (\r\n              <Accordion key={i} style={{\r\n                marginBottom: 8, border: \"1px solid #eee\",\r\n                boxShadow: \"1px 1px 5px #ddd\",\r\n              }}>\r\n                <AccordionSummary expandIcon={<ExpandMore />}\r\n                  id={i}>\r\n                  <Typography variant=\"h6\" style={{ marginBottom: 10 }}>Q: {a.question}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography paragraph style={{ whiteSpace: \"pre-line\" }}>\r\n                    <b>A</b>: <ReactLinkify componentDecorator={(decoratedHref, decoratedText, key) => (\r\n                      <a target=\"blank\" href={decoratedHref} key={key} style={{ color: \"#027502\" }}>\r\n                        {decoratedText}\r\n                      </a>\r\n                    )}>{a.answer}</ReactLinkify>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginTop: 100,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography align=\"center\" variant=\"h6\">\r\n            There is no FAQ yet!\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Container maxWidth=\"md\"  >\r\n      <Typography variant=\"h5\" gutterBottom style={{ fontWeight: 700, marginBottom: 20, marginTop: 80 }} color=\"primary\">\r\n        Frequently Ask Questions\r\n          </Typography>\r\n\r\n      {renderFAQ()}\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FAQ;\r\n"],"sourceRoot":""}